<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbsoluteUrl" xml:space="preserve">
    <value>Absolute URL</value>
  </data>
  <data name="AccountId" xml:space="preserve">
    <value>Account ID</value>
  </data>
  <data name="AccountType" xml:space="preserve">
    <value>Account Type</value>
  </data>
  <data name="AddressLabel" xml:space="preserve">
    <value>Address Label</value>
  </data>
  <data name="AddressReceipient" xml:space="preserve">
    <value>Receipient</value>
  </data>
  <data name="Addressuffix" xml:space="preserve">
    <value>Address Suffix</value>
  </data>
  <data name="AddressType" xml:space="preserve">
    <value>Address Type</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ArtistName" xml:space="preserve">
    <value>ArtistName</value>
  </data>
  <data name="AuthenticationType" xml:space="preserve">
    <value>Authentication Type</value>
  </data>
  <data name="batchNumber" xml:space="preserve">
    <value>batchNumberEN</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ContactLabel" xml:space="preserve">
    <value>Contat Label</value>
  </data>
  <data name="ContactRegex" xml:space="preserve">
    <value>Regex Validation Rule</value>
  </data>
  <data name="ContactType" xml:space="preserve">
    <value>Contact Type</value>
  </data>
  <data name="ContactValue" xml:space="preserve">
    <value>Contact Value</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>Country Code</value>
  </data>
  <data name="CountryName" xml:space="preserve">
    <value>Country Name</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="CultureName" xml:space="preserve">
    <value>Culture Name</value>
  </data>
  <data name="DeliveryInstruction" xml:space="preserve">
    <value>Delivery Instruction</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ETag" xml:space="preserve">
    <value>ETag</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>Event Name</value>
  </data>
  <data name="FamilyName" xml:space="preserve">
    <value>Family Name</value>
  </data>
  <data name="fieldName" xml:space="preserve">
    <value>fieldNameEN</value>
  </data>
  <data name="GivenName" xml:space="preserve">
    <value>Given Name</value>
  </data>
  <data name="GuidId" xml:space="preserve">
    <value>Guid-Id</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ImageName" xml:space="preserve">
    <value>Image Label</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastModifiedDate" xml:space="preserve">
    <value>Last Modified Date</value>
  </data>
  <data name="LastVerified" xml:space="preserve">
    <value>Last Verified Date</value>
  </data>
  <data name="LinkLabel" xml:space="preserve">
    <value>link label</value>
  </data>
  <data name="LocationName" xml:space="preserve">
    <value>Location Name</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="NameSuffix" xml:space="preserve">
    <value>Suffix</value>
  </data>
  <data name="PageNumber" xml:space="preserve">
    <value>Page Number</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="PermissionLevel" xml:space="preserve">
    <value>Permission Level</value>
  </data>
  <data name="PermissionRole" xml:space="preserve">
    <value>Permission Role</value>
  </data>
  <data name="PhoneAreaCode" xml:space="preserve">
    <value>Area Code</value>
  </data>
  <data name="PhoneBaseNumber" xml:space="preserve">
    <value>Base Number</value>
  </data>
  <data name="PhoneCountryCode" xml:space="preserve">
    <value>Country Code</value>
  </data>
  <data name="PhoneExtension" xml:space="preserve">
    <value>Extention</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhonePublicPart" xml:space="preserve">
    <value>Public part of Phone Number</value>
  </data>
  <data name="PointInTimeName" xml:space="preserve">
    <value>Point In Time Name</value>
  </data>
  <data name="preferredLanguages" xml:space="preserve">
    <value>preferredLanguages</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Receipient" xml:space="preserve">
    <value>Receipient</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Ergebnis</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort Position</value>
  </data>
  <data name="SortingColumn" xml:space="preserve">
    <value>Sorting Column</value>
  </data>
  <data name="SortingCriteria" xml:space="preserve">
    <value>Sorting Criteria</value>
  </data>
  <data name="SortingDirection" xml:space="preserve">
    <value>Sorting Direction</value>
  </data>
  <data name="StandardFeeInfo" xml:space="preserve">
    <value>standard fee info</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="StreetAffix" xml:space="preserve">
    <value>Street Affix</value>
  </data>
  <data name="StreetNumber" xml:space="preserve">
    <value>Street Number</value>
  </data>
  <data name="UriLabel" xml:space="preserve">
    <value>URI label</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserStatus" xml:space="preserve">
    <value>User Status</value>
  </data>
  <data name="UserType" xml:space="preserve">
    <value>UserT ype</value>
  </data>
  <data name="WebLinkLabel" xml:space="preserve">
    <value>Web Link Label</value>
  </data>
  <data name="ZIP" xml:space="preserve">
    <value>Zip Code</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ShortName" xml:space="preserve">
    <value>Short Name</value>
  </data>
  <data name="DisplayOrder" xml:space="preserve">
    <value>DisplayOrder</value>
  </data>
  <data name="Uri" xml:space="preserve">
    <value>URI</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="fileName" xml:space="preserve">
    <value>fileName</value>
  </data>
  <data name="LevelShortName" xml:space="preserve">
    <value>Short Name Level</value>
  </data>
  <data name="FocusPoint" xml:space="preserve">
    <value>Focus Point</value>
  </data>
</root>